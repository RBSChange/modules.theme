<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl" xmlns:xbl="http://www.mozilla.org/xbl"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<binding id="importThemeDialog" extends="core.wDialog#wDialog">
		<implementation>
			<field name="nsIFile">null</field>
			
			<constructor><![CDATA[
				wCore.debug('importThemeDialog.constructor');	
			]]></constructor>

			<method name="onInitialize">
				<body><![CDATA[
					this.autoResize(400, 150);
				]]></body>
			</method>

			<method name="onCancel">
				<body><![CDATA[
					this.parameters.module.refresh();
					this.controller.closeModalDialog();
				]]></body>
			</method>

			<method name="openFilePicker">
				<body><![CDATA[	
					var filePicker = Components.classes["@mozilla.org/filepicker;1"].createInstance(Components.interfaces.nsIFilePicker);
					filePicker.init(window, "Selectionner un fichier", filePicker.modeOpen);
					if(filePicker.show() == filePicker.returnOK)
					{
						this.setFile(filePicker.file);
					}
				]]></body>
			</method>
			
			<method name="setFile">
				<parameter name="nsIFile" />
				<body><![CDATA[
					var field = document.getAnonymousElementByAttribute(this, 'anonid', 'file');
					field.setAttribute('value', nsIFile.leafName);
					this.nsIFile = nsIFile;
					
					var button = document.getAnonymousElementByAttribute(this, 'anonid', 'ok');
					button.removeAttribute('disabled');
				]]></body>
			</method>
			
			<method name="onOk">
				<body><![CDATA[
					try
					{
						document.getAnonymousElementByAttribute(this, 'anonid', 'form-panel').setAttribute('hidden', 'true');
						document.getAnonymousElementByAttribute(this, 'anonid', 'importing-panel').removeAttribute('hidden');
						document.getAnonymousElementByAttribute(this, 'anonid', 'message-panel').setAttribute('hidden', 'true');
						var me = this;
						var callbackComplete = function(result) {me.onImportTheme(result);};
						var parameters = {module: 'theme', action: 'ImportTheme', folderId: this.parameters.folderId};
						wCore.uploadFile(this.nsIFile, parameters, callbackComplete);
					}
					catch (e)
					{
						wCore.error("onOk", [nsIFile], e);
						document.getAnonymousElementByAttribute(this, 'anonid', 'form-panel').removeAttribute('hidden');
						document.getAnonymousElementByAttribute(this, 'anonid', 'importing-panel').setAttribute('hidden', 'true');
						document.getAnonymousElementByAttribute(this, 'anonid', 'message-panel').setAttribute('hidden', 'true');
					}
				]]></body>
			</method>
			
			<method name="onImportTheme">
				<parameter name="result" />
				<body><![CDATA[
					document.getAnonymousElementByAttribute(this, 'anonid', 'form-panel').setAttribute('hidden', 'true');
					document.getAnonymousElementByAttribute(this, 'anonid', 'importing-panel').setAttribute('hidden', 'true');
					document.getAnonymousElementByAttribute(this, 'anonid', 'message-panel').removeAttribute('hidden');
					
					if (result.status == 'OK')
					{
						if (result.contents.theme)
						{
							this.appendMessage(result.contents.theme);
						}
						else
						{
							this.appendMessage("Import succes.");
						}
					}
					else
					{
						wCore.warn('cDocumentField.onUplodedFile: ' + wCore.dump(result));
						this.appendMessage(result.contents.errorMessage);
					}
				]]></body>
			</method>
			
			<method name="appendMessage">
				<parameter name="msg" />
				<body><![CDATA[
					var messageBox = document.getAnonymousElementByAttribute(this, 'anonid', 'messageBox');
					var txts = msg.split("\n");
					for (var i = 0; i < txts.length; i++)
					{
						var node = messageBox.appendChild(document.createElement('description'));
						node.setAttribute('style', 'max-width: 370px');
						node.textContent = txts[i];
					}
				]]></body>
			</method>
		</implementation>
		<xbl:content>
			<xul:vbox flex="1">
				<xul:hbox class="dialog-header">
					<xul:label value="${trans:m.theme.bo.general.import-title,ucf,attr}" class="dialog-title" />
					<xul:spacer flex="1" />
					<xul:vbox pack="center">
						<xul:toolbarbutton height="16" width="16" image="{IconsBase}/small/delete.png" oncommand="onCancel();" tooltiptexts="${trans:m.uixul.bo.dialog.cancel,ucf,attr}" />
					</xul:vbox>
				</xul:hbox>
				<xul:deck anonid="deck">
					<xul:vbox anonid="form-panel" flex="1">
						<xul:hbox align="center" pack="start" style="margin-top: 5px">
							<xul:label value="${trans:m.theme.bo.general.import-file,lab,ucf,attr}" />
							<xul:textbox readonly="true" anonid="file" size="30" />
							<xul:toolbarbutton anonid="uploadbutton" image="{IconsBase}/small/upload.png" oncommand="openFilePicker()" tooltiptext="${trans:m.uixul.bo.doceditor.upload-file-from-disk,ucf,attr}" />
						</xul:hbox>
						<xul:hbox flex="1" align="start" pack="center" style="margin-top: 20px">
							<xul:button image="{IconsBase}/small/check.png" disabled="true" anonid="ok" oncommand="onOk()"	label="${trans:m.theme.bo.general.import-import,ucf,attr}" />
							<xul:button image="{IconsBase}/small/delete.png" oncommand="onCancel()" label="${trans:m.uixul.bo.dialog.cancel,ucf,attr}" />
						</xul:hbox>
					</xul:vbox>
					<xul:vbox anonid="importing-panel" flex="1" style="opacity:0.7">
						<xul:spacer height="15px" />
						<xul:hbox pack="center">
							<xul:image src="{HttpHost}/media/backoffice/loading_40.gif" height="40px" width="40px" />
						</xul:hbox>
						<xul:spacer height="16px" />
						<xul:hbox pack="center">
							<xul:description style="font-size:18px" value="${trans:m.theme.bo.general.importing,ucf,attr}" />
						</xul:hbox>
					</xul:vbox>
					<xul:vbox anonid="message-panel" flex="1">
						<xul:vbox anonid="messageBox" style="min-height: 90px"/>
						<xul:hbox>
							<xul:button image="{IconsBase}/small/delete.png" oncommand="onCancel()" label="${trans:m.uixul.bo.dialog.cancel,ucf,attr}" />
						</xul:hbox>
					</xul:vbox>
				</xul:deck>
			</xul:vbox>
		</xbl:content>
	</binding>
	
	<!-- Page template replacement -->
		
	<binding id="cReplacePagetemplateDialog" extends="core.wDialog#wDialog">
		<resources>
			<stylesheet src="modules.theme.cReplacePagetemplateDialog" />
		</resources>
		<implementation>
			<field name="mInitialized">false</field>
			<field name="mConfig">null</field>
		
			<constructor><![CDATA[
				wCore.debug('cInitializeStructureDialog.constructor');
			]]></constructor>
			
			<method name="onInitialize">
				<body><![CDATA[
					this.autoResize(550, 225);					
					var me = this;
					var callBack = function(result) { me.onLoadRessources(result); };
					var params = {excludeId: this.parameters.toReplaceId};
					wCore.executeJSON('theme', 'LoadReplacePagetemplateInfos', params, callBack, true);
				]]></body>
			</method>
			
			<method name="onLoadRessources">
				<parameter name="result" />			
				<body><![CDATA[
					this.mConfig = {};
					this.mInitialized = true;
					var field = this.getElementByAnonId('template');
					if (result.contents.length > 0)
					{
						for (var i in result.contents)
						{
							var itemInfos = result.contents[i];
							this.mConfig[itemInfos.id] = itemInfos;
							var item = field.appendItem(itemInfos.label, itemInfos.id);
							if (itemInfos.disabled)
							{
								item.setAttribute('disabled', 'true');
							}
						}
					}
					else
					{
						this.getElementByAnonId('form-panel').setAttribute('hidden', 'true');
						this.getElementByAnonId('importing-panel').setAttribute('hidden', 'true');
						this.getElementByAnonId('message-panel').removeAttribute('hidden');
						this.appendMessage("${trans:m.theme.bo.errors.no-page-template,ucf,js}", true);
					}
				]]></body>
			</method>
			
			<method name="onClose">
				<body><![CDATA[
					this.parameters.module.refreshMainViewDeck();
					this.controller.closeModalDialog();
				]]></body>
			</method>
			
			<method name="handleSelected">
				<parameter name="list" />
				<body><![CDATA[
					var templateId = this.getElementByAnonId('template').value;
					try
					{
						this.getElementByAnonId('form-panel').setAttribute('hidden', 'true');
						this.getElementByAnonId('importing-panel').removeAttribute('hidden');
						this.getElementByAnonId('message-panel').setAttribute('hidden', 'true');
						var result = wCore.executeJSON('theme', 'ReplacePagetemplate', {replaceById: templateId, toReplaceId: this.parameters.toReplaceId}, null, true);
						this.onPagetemplateReplaced(result);
					}
					catch (e)
					{
						wCore.error("onOk", [templateId], e);
						this.getElementByAnonId('form-panel').removeAttribute('hidden');
						this.getElementByAnonId('importing-panel').setAttribute('hidden', 'true');
						this.getElementByAnonId('message-panel').setAttribute('hidden', 'true');
					}					
				]]></body>
			</method>
			
			<method name="onPagetemplateReplaced">
				<parameter name="result" />
				<body><![CDATA[
					this.getElementByAnonId('form-panel').setAttribute('hidden', 'true');
					this.getElementByAnonId('importing-panel').setAttribute('hidden', 'true');
					this.getElementByAnonId('message-panel').removeAttribute('hidden');
					if (result.status == 'OK')
					{
						this.appendMessage("${trans:m.theme.bo.general.pagetemplate-replacement-planned,ucf,js}", false);
					}
					else
					{
						this.appendMessage(result.contents.errorMessage, true);
					}
				]]></body>
			</method>
			
			<method name="appendMessage">
				<parameter name="msg" />
				<parameter name="error" />
				<body><![CDATA[
					var messageBox = this.getElementByAnonId('messageBox');
					var txts = msg.split("\n");
					for (var i = 0; i < txts.length; i++)
					{
						var node = messageBox.appendChild(document.createElement('description'));
						node.className = (error) ? 'error' : 'message';
						node.textContent = txts[i];
					}
				]]></body>
			</method>
		</implementation>
		<handlers>
			<handler event="fieldChanged"><![CDATA[
				var templateId = event.originalTarget.value;
				wCore.debug('templateId = ' + templateId);
				var item = this.mConfig[templateId];
				var previewImageAnonId = 'previewimage';
				if (item && item.hasPreviewImage)
				{
					var url = wCore.buildServerUrl('theme', 'PreviewImage', {cmpref: item.id, lang: Context.W_LANG, 'max-height': 200, 'max-width': 250});
					this.getElementByAnonId(previewImageAnonId).setAttribute('src', url);
				}
				else
				{
					this.getElementByAnonId(previewImageAnonId).setAttribute('src', 'about:blank');
				}
				this.getElementByAnonId('submitButton').disabled = !this.getElementByAnonId('template').valid;
			]]></handler>
		</handlers>
		<xbl:content>
			<xul:vbox flex="1">
				<xul:hbox class="dialog-header">
					<xul:label value="${trans:m.theme.bo.general.replace-pagetemplate-title,ucf,attr}" class="dialog-title" />
					<xul:spacer flex="1" />
					<xul:vbox pack="center">
						<xul:toolbarbutton image="{IconsBase}/small/delete.png" oncommand="onClose()" 
							tooltiptexts="${trans:m.uixul.bo.dialog.cancel,ucf,attr}" />
					</xul:vbox>
				</xul:hbox>
				<xul:hbox flex="1">
					<xul:deck anonid="deck" flex="1">
						<xul:vbox anonid="form-panel" flex="1">
							<xul:vbox flex="1">
								<xul:hbox>
									<xul:vbox>
										<xul:vbox flex="1" pack="center">
											<xul:description>${trans:m.theme.bo.general.select-pagetemplate,ucf}</xul:description>
											<xul:spacer height="5px"/>
											<xul:cfield anonid="template" name="template" fieldtype="dropdownlist" hidehelp="true" required="true" />
										</xul:vbox>
										<xul:hbox align="center" pack="center">
											<xul:button anonid="submitButton" disabled="true" image="{IconsBase}/small/check.png" label="${trans:m.theme.bo.general.replace,ucf,attr}" oncommand="handleSelected()" />
										</xul:hbox>	
									</xul:vbox>
									<xul:spacer width="5"/>
									<xul:vbox width="250" height="200" align="center" pack="center">
										<xul:image anonid="previewimage" src="{IconsBase}/small/document.png" />
									</xul:vbox>
								</xul:hbox>
								<xul:spacer height="10px" />														
							</xul:vbox>
						</xul:vbox>
						<xul:vbox anonid="importing-panel" flex="1">
							<xul:spacer height="15px" />
							<xul:hbox pack="center">
								<xul:image src="{HttpHost}/media/backoffice/loading_40.gif" height="40px" width="40px" />
							</xul:hbox>
							<xul:spacer height="16px" />
							<xul:hbox pack="center">
								<xul:description style="font-size:18px" value="${trans:m.theme.bo.general.planning-pagetemplate-replacement,ucf,attr}" />
							</xul:hbox>
						</xul:vbox>
						<xul:vbox anonid="message-panel" flex="1">
							<xul:vbox anonid="messageBox" flex="1" />
						</xul:vbox>
					</xul:deck>
				</xul:hbox>
			</xul:vbox>
		</xbl:content>
	</binding>
</bindings>